<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.dao.CityMapper">

    <!-- 表中字段与pojo属性不一致时引出的resultMap-->
    <!--resultMap来处理配置文件中加入新sql配置
        id:resultMap的唯一标识
        type:映射的pojo类型-->
    <!--id主键字段
         result:其他字段，
         property 对应pojo的属性名
         column对应表中的字段名-->
    <resultMap id="cityMap" type="City2">
        <id property="city_Id" column="city_id"></id>
        <result property="city_Name" column="city_name"></result>
        <result property="provId" column="prov_id"></result>
    </resultMap>
    <select id="queryAllCityTest1" resultMap="cityMap">
         select * from City
    </select>

    <!-- 定义sql片段-->
    <!--将上边实现的动态sql判断代码块抽取出来，组成一个sql片段。
        其它的statement中就可以引用sql片段。方便程序员进行开发
        演示通过select * 不好引出查询字段名，抽取共用sql片段。-->
    <sql id="citySql">
        `city_id`,
        `city_name`
    </sql>
    <!-- 调用sql片段-->
    <select id="queryAllCityTest2" resultMap="cityMap">
        select
        <include refid="citySql"></include>
        from city
    </select>

    <!-- 给sql传入集合-->
    <select id="queryAllCityTest3" parameterType="City2" resultMap="cityMap">
        select
        <include refid="citySql"></include>
        from city
        <!--where  city_id in(1,3,5,6,7)-->
        <where>
            <foreach collection="ids" open="city_id in(" item="cityId" separator="," close=")">
                #{cityId}
            </foreach>
        </where>
    </select>

    <!--一对一关系 按照 -->
    <select id="queryAllCityTest4" resultType="City3">
        SELECT p.prov_id,p.prov_name,c.city_id,c.city_name
        FROM  prov AS p,city AS c
        WHERE p.prov_id = c.prov_id
    </select>
</mapper>